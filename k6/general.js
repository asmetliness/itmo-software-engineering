/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * OpenAPI generator version: 6.3.0-SNAPSHOT
 */


import http from "k6/http";
import { group, check, sleep } from "k6";
import { htmlReport } from "https://raw.githubusercontent.com/benc-uk/k6-reporter/main/dist/bundle.js";


const BASE_URL = "http://localhost:8080";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.
const TOKEN = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVc2VyIGRldGFpbHMiLCJpc3MiOiJhcnRpZmFjdCIsInVzZXJJZCI6MSwiaWF0IjoxNjczOTgwMzU0fQ.e4XggjCpWcb46Yol3OLua6WCWtZEzL1UGJ51jbcWJhk"
const INFORMER_TOKEN = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVc2VyIGRldGFpbHMiLCJpc3MiOiJhcnRpZmFjdCIsInVzZXJJZCI6MiwiaWF0IjoxNjczOTgwNDI3fQ.-gHJOIocryVqgTwXpKGMqB6Pb56XOt_wXeK3fFBjv9s"
const WEAPON_TOKEN = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVc2VyIGRldGFpbHMiLCJpc3MiOiJhcnRpZmFjdCIsInVzZXJJZCI6MywiaWF0IjoxNjczOTgwNDYxfQ.WZHLi2NiqK9qGv2ncKJi29oQrmq0uIcSk9rV0XPU4rM"
const CLIENT_TOKEN = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVc2VyIGRldGFpbHMiLCJpc3MiOiJhcnRpZmFjdCIsInVzZXJJZCI6NSwiaWF0IjoxNjczOTgwNDk2fQ.FM5F6_lggx3ciTiCSBUl4c3v2ZguDl_OWwtjZVoJGbw"

var UserImage = open("C:\\Users\\naymoll\\Documents\\k6-test\\image.jpg", "b");

export const options = {
    discardResponseBodies: true,
    scenarios: {
      api: {
        executor: 'per-vu-iterations',
        vus: 10,
        iterations: 10,
        maxDuration: '10m',
      },
    },
  };

export default function() {
    group("/api/artifacts", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/artifacts`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/users/stalkers", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/users/stalkers`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/information", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/information`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/information`;
            let body = {"title": "Медуза", "description": "Делает что-то", "information": "Обычно находится там-то там-то", "price": 1200};
            let params = {headers: {"Content-Type": "application/json", "Accept": "*/*", "Authorization": `Bearer ${INFORMER_TOKEN}`}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/weapon", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/weapon`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/weapon`;
            let body = {"title": "AK", "description": "Вообще крутой ствол", "price": 500000};
            let params = {headers: {"Content-Type": "application/json", "Accept": "*/*", "Authorization": `Bearer ${WEAPON_TOKEN}`}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/weapon/{id}", () => {
        let id = 1;

        // Request No. 1
        {
            let url = BASE_URL + `/api/weapon/${id}`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }
    });

    group("/api/orders/{id}", () => {
        let id = 1;

        // Request No. 1
        {
            let url = BASE_URL + `/api/orders/${id}`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    // group("/api/users/image/upload", () => {

    //     // Request No. 1
    //     {
    //         let url = BASE_URL + `/api/users/image/upload`;
    //         // TODO: edit the parameters of the request body.
    //         let body = {"image": http.file(UserImage, "image.jpg")};
    //         let params = {headers: {"Content-Type": "application/json", "Accept": "*/*", "Authorization": `Bearer ${TOKEN}`}};
    //         let request = http.post(url, JSON.stringify(body), params);

    //         check(request, {
    //             "default response": (r) => r.status === 200
    //         });
    //     }
    // });

    group("/api/weapon/available", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/weapon/available`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/users/current", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/users/current`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/users/current`;
            let body = {"firstName": "Илья", "lastName": "Меддисон", "middleName": "Анатольевич", "nickname": "Муравей"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "*/*", "Authorization": `Bearer ${TOKEN}`}};
            let request = http.put(url, JSON.stringify(body), params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/notifications", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/notifications`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/orders", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/orders`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/orders`;
            let body = {"artifactId": 1, "price": 2000, "completionDate": "2022-12-17", "deliveryAddress": "Sant-Peterburg"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "*/*", "Authorization": `Bearer ${CLIENT_TOKEN}`}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/weapon/requested", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/weapon/requested`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/users/couriers", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/users/couriers`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/information/{id}", () => {
        let id = 1;

        // Request No. 1
        {
            let url = BASE_URL + `/api/information/${id}`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }
    });

    group("/api/information/requested", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/information/requested`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/roles", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/roles`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/orders/available", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/orders/available`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

    group("/api/information/available", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/information/available`;
            let params = {headers: {"Authorization": `Bearer ${TOKEN}`}};
            let request = http.get(url, params);

            check(request, {
                "default response": (r) => r.status === 200
            });
        }
    });

}

export function handleSummary(data) {
    return {
      "summary.html": htmlReport(data),
    };
  }